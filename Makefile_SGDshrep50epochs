.DELETE_ON_ERROR:

# don't delete intermediate files
#.SECONDARY:

# parameters:
EXPERIMENT_ID:=sgd_shrep50epochs
R:=3
D:=6
b:=11
epochs:=50

# paths
ROOT:=~/projects/RBPaffinity
FA_DIR:=~/projects/RBPaffinity/data/fasta/
THR_DIR:=~/projects/RBPaffinity/data/thresholds/
AUC:=java -jar ~/local/auc/auc.jar

# binaries
FA2SHREP:=/usr/local/user/RNAtools/fasta2shrep_gspan.pl
SVRTRAIN:=~/src/libsvm-3.0/svm-train -s 3 -t 0 -m 2000
SVRPREDICT:=~/src/libsvm-3.0/svm-predict
PERF:=~/src/stat/perf
SGDNSPDK:=~/src/svmsgdnspdk_dir/svmsgdnspdk

# targets
PROTEINS:=Fusip HuR PTB RBM4 SF2 SLM2 U1A VTS1 YB1
#PROTEINS:=U1A
BASENAMES:=$(patsubst %,%_data_full_A,$(PROTEINS)) \
			$(patsubst %,%_data_full_B,$(PROTEINS)) \
			$(patsubst %,%_data_bruijn_A,$(PROTEINS)) \
			$(patsubst %,%_data_bruijn_B,$(PROTEINS))
PERF_FILES:=$(patsubst %,%.perf,$(BASENAMES))

all: results_aucpr.csv

%.gspan.gz : $(FA_DIR)/%.fa
	/usr/local/perl/bin/perl $(FA2SHREP) -fa $< -stdout \
	-t 3 -M 5 -wins 50 -shift 10 | gzip > $@

%.train.selection : $(FA_DIR)/%.fa
	HT=0; LT=0; zcat -f $< | grep "^>" | awk -v LT=$$LT -v HT=$$HT \
	'{if($$NF<LT){print $$NF, -1 }else if($$NF>HT){print $$NF, 1 }else{print "nil"}}' > $@
	
%.class : %.selection
	cat $< | awk '$$1!="nil"' | cut -f 2 -d' ' > $@

%.train.gspan.gz : %.gspan.gz %.train.selection
	zcat -f $< | awk -v HF="$*.train.selection" \
	'BEGIN{ while (getline < HF ) {H[++c]=$$1} } $$1=="t"{n++} H[n]!="nil" {print $$0}' | \
	awk '$$0!~/^$$/' | gzip > $@

%.test.gspan.gz : %.gspan.gz %.test.selection
	zcat -f $< | awk -v HF="$*.test.selection" \
	'BEGIN{ while (getline < HF ) {H[++c]=$$1} } $$1=="t"{n++} H[n]!="nil" {print $$0}' | \
	awk '$$0!~/^$$/' | gzip > $@

%.test.selection : BASENAME=$(firstword $(subst _, ,$*))
%.test.selection : HT=$(shell grep $(BASENAME) $(THR_DIR)/positive.txt | cut -f 2 -d' ')
%.test.selection : LT=$(shell grep $(BASENAME) $(THR_DIR)/negative.txt | cut -f 2 -d' ')
%.test.selection : $(FA_DIR)/%.fa
	zcat -f $< | grep "^>" | awk -v LT=$(LT) -v HT=$(HT) \
	'{if($$NF<LT){print $$NF, -1 }else if($$NF>HT){print $$NF, 1 }else{print "nil"}}' > $@

%.model : %.train.gspan.gz %.train.class
	$(SGDNSPDK) -e $(epochs) -b $(b) -mode FILE -a TRAIN -d $< -t $*.train.class -m $@ -ll 1 $(R) $(D)

%full_B.sgdout : %full_B.model %full_A.test.gspan.gz %full_A.test.class
	mkdir -p $<.dir
	cd $<.dir; $(SGDNSPDK) -b $(b) -mode FILE -a TEST -m ../$< -ll 1 $(R) $(D) \
	-d ../$*full_A.test.gspan.gz -t ../$*full_A.test.class
	mv $<.dir/output.predictions $@
	rm -rf $<.dir

%full_A.sgdout : %full_A.model %full_B.test.gspan.gz %full_B.test.class
	mkdir -p $<.dir
	cd $<.dir; $(SGDNSPDK) -b 11 -mode FILE -a TEST -m ../$< -ll 1 $(R) $(D) \
	-d ../$*full_B.test.gspan.gz -t ../$*full_B.test.class 
	mv $<.dir/output.predictions $@
	rm -rf $<.dir

%full_A.pred : %full_A.sgdout %full_B.test.class
	# combine affinities and predictions
	cut -f 2 -d' ' $< | paste $*full_B.test.class - > $@

%full_B.pred : %full_B.sgdout %full_A.test.class
	# combine affinities and predictions
	cut -f 2 -d' ' $< | paste $*full_A.test.class - > $@

%bruijn_B.sgdout : %bruijn_B.model %full_A.test.gspan.gz %full_A.test.class
	mkdir -p $<.dir
	cd $<.dir; $(SGDNSPDK) -b 11 -mode FILE -a TEST -m ../$< -ll 1 $(R) $(D) \
	-d ../$*full_A.test.gspan.gz -t ../$*full_A.test.class
	mv $<.dir/output.predictions $@
	rm -rf $<.dir

%bruijn_A.sgdout : %bruijn_A.model %full_B.test.gspan.gz %full_B.test.class
	mkdir -p $<.dir
	cd $<.dir; $(SGDNSPDK) -b 11 -mode FILE -a TEST -m ../$< -ll 1 $(R) $(D) \
	-d ../$*full_B.test.gspan.gz -t ../$*full_B.test.class 
	mv $<.dir/output.predictions $@
	rm -rf $<.dir

%bruijn_A.pred : %bruijn_A.sgdout %full_B.test.class
	# combine affinities and predictions
	cut -f 2 -d' ' $< | paste $*full_B.test.class - > $@

%bruijn_B.pred : %bruijn_B.sgdout %full_A.test.class
	# combine affinities and predictions
	cut -f 2 -d' ' $< | paste $*full_A.test.class - > $@

%.perf : %.pred
	# compute performance measures
	$(PERF) -confusion < $< > $@

results_aucpr.csv : $(PERF_FILES)
	grep ROC $(PERF_FILES) | tr ':' ' ' | \
	awk '{print $$1, "$(EXPERIMENT_ID)", $$NF}' | sort > roc.tmp
	grep APR $(PERF_FILES) | tr ':' ' ' | \
	awk '{print $$1, "$(EXPERIMENT_ID)", $$NF}' | cut -f 1,3 -d' ' | \
	sort > aucpr.tmp
	join roc.tmp aucpr.tmp > $@
	rm -rf roc.tmp aucpr.tmp

clean:
	-rm -rf log *.gspan.gz *.selection *.class *.model *.sgdout

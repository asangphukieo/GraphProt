## old code for MEME search
################################################################################
# # binaries
# MEME_GETMARKOV:=/home/maticzkd/src/meme_4.7.0/local/bin/fasta-get-markov
# MEME:=/home/maticzkd/src/meme_4.7.0/local/bin/meme
# FASTAUID:=/usr/local/user/RNAtools/fastaUID.pl
# # perform meme oops (only one per sequence) search
# meme_oops: positives_unique.fa negatives_markov0.txt
# 	$(MEME) $< -mod oops -maxsites 3 -minw 5 -maxw 15 -bfile negatives_markov0.txt -dna -nmotifs 5 -maxsize 300000 -oc $@
#
# # perform meme zoops (zero or one per sequence) search
# meme_zoops: positives_unique.fa negatives_markov0.txt
# 	$(MEME) $< -mod zoops -maxsites 3 -minw 5 -maxw 15 -bfile negatives_markov0.txt -dna -nmotifs 5 -maxsize 300000 -oc $@
#
# # assign unique ids to fasta headers
# %_unique.fa: %.fa
# 	$(FASTAUID) -id pos_ < $< > $@
#
# # create background model for meme motif search
# negatives_markov0.txt: negatives.fa
# 	$(MEME_GETMARKOV) -norc < $< > $@

# root for fastas and thresholds
PROJDIR:=/home/maticzkd/projects/RBPaffinity
FA_DIR:=$(PROJDIR)/data/fasta
THR_DIR:=$(PROJDIR)/data/thresholds/


################################################################################
ifeq ($(GRAPH_TYPE),MEGA)
# line search parameters
LSPAR:=$(DATADIR)/ls.$(METHOD_ID).mega.parameters

# accessibility graphs
%.acc.gspan.gz : VIEWPOINT=$(subst nil,,$(shell grep '^VIEWPOINT ' $*.param | cut -f 2 -d' '))
%.acc.gspan.gz : %.fa
	$(CREATE_EXTENDED_ACC_GRAPH) \
	-fa $< \
	$(VIEWPOINT) \
	-W $(W_PRIMARY) \
	-L $(L_PRIMARY) | gzip > $@; exit $${PIPESTATUS[0]}

# shrep graphs
%.shrep.gspan.gz : ABSTRACTION=$(shell grep '^ABSTRACTION ' $*.param | cut -f 2 -d' ')
%.shrep.gspan.gz : STACK=$(subst nil,,$(shell grep '^STACK ' $*.param | cut -f 2 -d' '))
%.shrep.gspan.gz : CUE=$(subst nil,,$(shell grep '^CUE ' $*.param | cut -f 2 -d' '))
%.shrep.gspan.gz : VIEWPOINT=$(subst nil,,$(shell grep '^VIEWPOINT ' $*.param | cut -f 2 -d' '))
%.shrep.gspan.gz : %.fa | %.param
	$(FASTA2GSPAN) -stdout \
	-fasta $< \
	--seq-graph-t --seq-graph-alph \
	$(STACK) \
	$(CUE) \
	$(VIEWPOINT) \
	-t $(ABSTRACTION) \
	-M $(SHREPS_MAX) \
	-wins '$(SHAPES_WINS)' \
	-shift '$(SHAPES_SHIFT) | \
	gzip > $@; exit $${PIPESTATUS[0]}

# merge gspans
%.gspan.gz : %.shrep.gspan %.acc.gspan
	$(MERGE_GSPAN) -shrep $*.shrep.gspan -acc $*.acc.gspan | \
	gzip > $@; exit $${PIPESTATUS[0]}
endif


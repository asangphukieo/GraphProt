## Binaries ####################################################################

## Other Binaries ##############################################################
PERL:=/usr/local/perl/bin/perl
RBIN:=/usr/local/R/2.15.1-lx/bin/R --vanilla
SVRTRAIN:=/home/maticzkd/src/libsvm-3.12/svm-train -s 3 -t 0 -m $(SVR_CACHE)
SVRPREDICT:=/home/maticzkd/src/libsvm-3.12/svm-predict
SHUF:=/home/maticzkd/src/coreutils-8.15/src/shuf
# set parralel environment for omp: -v OMP_NUM_THREADS=24 -pe '*' 24
SVMSGDNSPDK:=/home/maticzkd/local/svmsgdnspdk_130606/EDeN
BEDGRAPH2BIGWIG:=/usr/local/ucsctools/2012-02/bin/bedGraphToBigWig
BASH:=/bin/bash
BEDTOOLS:=/usr/local/user/BEDTools-Version-2.17.0/bin/bedtools
GNUPLOT:=/home/maticzkd/local/bin/gnuplot
# perf is available at http://www.cs.cornell.edu/~caruana/
PERF:=perf
TWOBITTOFA:=/usr/local/ucsctools/2012-02/bin/twoBitToFa

## General parameters ##########################################################
DIST_DIR:=GraphProt_distribution

# use sge arrayjobs to create gspan and features
# implemented for CONTEXTSHREP
SGEARRAY=YES
# old cluster:
#SGE_SUBMIT_HOST=biui.informatik.uni-freiburg.de
#SGE_EXPORT=export SGE_ROOT=/opt/sge-6.0/
#SGE_BIN_PATH=/opt/sge-6.0/bin/lx24-amd64
# new cluster:
SGE_SUBMIT_HOST=ui.bi.uni-freiburg.de
SGE_EXPORT=export SGE_ROOT=/opt/ogs; export SGE_CELL=BI1
SGE_BIN_PATH=/opt/ogs/bin/linux-x64

# prefix of train/test data
# RNAcompete proteins
#PROTEINS:=Fusip HuR PTB RBM4 SF2 SLM2 U1A VTS1 YB1
PROTEINS:=testclip

# select evaluation type: RNACOMPETE / CLIP
# RNACOMPETE:
#   filename handling for RNAcompete input
#	expect input files ID_data_{full,weak}_{A,B}.fa
# CLIP:
#   filename handling for generic input
#   fasta input ID.train.fa built automatically from
#   ID.train.positives.fa, ID.train.negatives,fa [and ID.train.unknowns.fa]
#   test input ID.test.fa built the same way
EVAL_TYPE=CLIP

# set SVM type: SVR / SGD
SVM=SGD

# set graph type:
# SEQUENCE: plain sequence
# SHREP: plain shrep graphs
# CONTEXTSHREP: shrep graphs annotated with structural context
GRAPH_TYPE=CONTEXTSHREP

# folding parameters:
# The primary window sizes are used for both shreps and accessibilities.
# Secondary window size is only used for shreps.
# W_PRIMARY defaults to 150 according to Lange & Maticzka et al. 2011.
# L_PRIMARY is used for RNAplfold computation of accessibilities. Defaults to
# W_PRIMARY-50 according to Lange & Maticzka et al. 2011.
W_PRIMARY=150
L_PRIMARY=100
W_SECONDARY=
SHAPES_WINS=$(W_PRIMARY),$(W_SECONDARY)
SHAPES_SHIFT=25
# maximum number of shreps
SHREPS_MAX=3

# enable/disable line search: YES/NO
DO_LINESEARCH=NO
# enable inner crossvalidation for parameter optimization
LS_DO_INNER_CV=NO
# enable/disable sgd-internal optimization
DO_SGDOPT=YES
# try this many variations of each parameter
SGDOPT_STEPS=5

# how many sequences to sample for parameter line search
LINESEARCH_INPUT_SIZE:=1000

# number of crossvalidation sets to use
CV_FOLD:=10

# number of iterations for the learningcurve evaluation
LEARNINGCURVE_SPLITS:=10

# profile generation parameters
# window size
MARGINS_WINDOW=12
# one of: (min, max, mean, median, sum)
MARGINS_MEASURE=mean

# motif elicitation: select the best TOP_WINDOWS for further processing
TOP_WINDOWS=1000

# amount of cache in MB used by libSVM
SVR_CACHE:=10000

# whether to keep intermediate files
SECONDARY=YES

# genome sequence
GENOME=genome.fa
# genome boundaries
GENOME_BOUNDS=genome.tab

## RNAcompete specific parameters ##############################################
ifeq ($(EVAL_TYPE),RNACOMPETE)
# sets for training: FULL/WEAK/ALL
TRAINING_SETS=FULL
endif

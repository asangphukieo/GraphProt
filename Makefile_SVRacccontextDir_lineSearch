.DELETE_ON_ERROR:

# don't delete intermediate files
.SECONDARY:

# parameters:
EXPERIMENT_ID:=svr_acccontextDir
R:=1
D:=1
b:=11

# paths
ROOT:=~/projects/RBPaffinity
FA_DIR:=~/projects/RBPaffinity/data/fasta/
THR_DIR:=~/projects/RBPaffinity/data/thresholds/

# binaries
SVRTRAIN:=~/src/libsvm-3.0/svm-train -s 3 -t 0 -m 2000
SVRPREDICT:=~/src/libsvm-3.0/svm-predict
PERF:=~/src/stat/perf

# targets
#PROTEINS:=Fusip HuR PTB RBM4 SF2 SLM2 U1A VTS1 YB1
PROTEINS:=test
BASENAMES:=$(patsubst %,%_data_full_A,$(PROTEINS)) \
			$(patsubst %,%_data_full_B,$(PROTEINS)) \
			$(patsubst %,%_data_bruijn_A,$(PROTEINS)) \
			$(patsubst %,%_data_bruijn_B,$(PROTEINS))
PERF_FILES:=$(patsubst %,%.perf,$(BASENAMES))

all: $(PERF_FILES) results_aucpr.csv

# if not available, copy fasta from data dir
%.fa : $(FA_DIR)/%.fa
	cp $< $@

# if available, create gspan from precomputed files
%.gspan : %.gspan.gz
	zcat $< > $@

# else, create gspan from fasta
%.gspan : %.fa
	/usr/local/perl/bin/perl $(ROOT)/bin/create_accgraph/createExtendedGraph.pl \
	-fa $< --path $(ROOT)/data/accs/ > $@

# when computing predictions, the same parameters should be used as when training
# the model. in order to be able to use simple name substitution in the
# relevant rules, this Makefile has to map the original input to files of
# the form %.pred.gpsan. this mapping is accomplished by these rules, emplying
# secondary expansion
.SECONDEXPANSION:
%_A.pred.gspan : $$(subst _A.,_B.,$$(subst _bruijn,_full,$$(subst .pred,,$$@)))
	# rename for convenience
	ln -f $< $@

%_B.pred.gspan : $$(subst _B.,_A.,$$(subst _bruijn,_full,$$(subst .pred,,$$@)))
	# rename for convenience
	ln -f $< $@

# just link default parameters; for using optimized parameters just supply
# alternative parameter files
%.param :
	ln -sf default.parameters $@

# feature creation for this type of graph has to set an additional parameter
# in order to center only on nucleotides and not on annotation -> -T nspdkvp
%.feature : %.gspan %.affy $$(subst .pred,,$$*).param
	# create features
	ln -fs $< $* # remove suffix to have shorter filenames
	$(ROOT)/bin/NSPDK -fg $* -of -R $(R) -D $(D) -b $(b) -T nspdkvp -gt DIRECTED
	-rm -f $* $@_bin # clean up after feature creation
	# add affinities to features
	mv $@ $@.tmp
	cat $@.tmp | grep -v \"^\$\" | paste -d' ' $*.affy - > $@
	-rm -rf $@.tmp # clean up affinityless feature file

%.affy : %.gspan
	# extract affinities from gspan
	cat $< | grep '^t' | awk '{print $$NF}' > $@

%.model : C=$(shell grep '^c' $*.param | cut -f 2 -d' ')
%.model : EPSILON=$(shell grep '^e' $*.param | cut -f 2 -d' ')
%.model : %.feature %.param
	$(SVRTRAIN) -c $(C) -p $(EPSILON) $< $@

%.svrout : %.model %.pred.feature
	$(SVRPREDICT) $*.pred.feature $< $@

%.pred : %.svrout %.pred.affy
	# combine affinities and predictions
	paste $*.pred.affy $< > $@

%.perf : BASENAME=$(firstword $(subst _, ,$<))
%.perf : $(shell echo $(BASENAME))
%.perf : HT=$(shell grep $(BASENAME) $(THR_DIR)/positive.txt | cut -f 2 -d' ')
%.perf : LT=$(shell grep $(BASENAME) $(THR_DIR)/negative.txt | cut -f 2 -d' ')
%.perf : %.pred
	# select by threshold
	( cat $< | awk '$$1 > $(HT)' | cut -f 2 | awk '{print 1 "\t" $$1 }'; \
	cat $< | awk '$$1 < $(LT)' | cut -f 2 | awk '{print 0 "\t" $$1}' ) > $@.threshold
	# compute performance measures
	$(PERF) < $@.threshold > $@
	rm -rf $@.threshold*

results_aucpr.csv : $(PERF_FILES)
	grep ROC $(PERF_FILES) | tr ':' ' ' | \
	awk '{print $$1, "$(EXPERIMENT_ID)", $$NF}' | sort > roc.tmp
	grep APR $(PERF_FILES) | tr ':' ' ' | \
	awk '{print $$1, "$(EXPERIMENT_ID)", $$NF}' | cut -f 1,3 -d' ' | \
	sort > aucpr.tmp
	join roc.tmp aucpr.tmp > $@
	rm -rf roc.tmp aucpr.tmp

# keep predictions and results
clean:
	-rm -rf $(MODELS) log *.gspan *.threshold* *.model *.feature *.affy *.svrout
